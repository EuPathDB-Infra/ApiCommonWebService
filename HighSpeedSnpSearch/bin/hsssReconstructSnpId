#!/usr/bin/perl

use strict;

my ($contigIdFile, $seqFilter, $minLoc, $maxLoc) = @ARGV;

usage() unless $contigIdFile;

open(C, $contigIdFile) || die "Can't open contig ID file '$contigIdFile'\n";
my %contigHash;
while (<C>) {
  chomp;
  my ($contigIndex, $contigSourceId) = split(/\t/);
  $contigHash{$contigIndex} = $contigSourceId;
}
close(C);

while(<STDIN>) {
  chomp;
  my @fields = split(/\t/);

  # -1=noncoding 0=coding 1=nonsyn 2=nonsense    convert nonysn and nonsense to a 'y'
  if ($fields[4] == -1) { $fields[4] = 'non-coding'; }
  elsif ($fields[4] == 0) { $fields[4] = 'syn'; }
  elsif ($fields[4] == 1) { $fields[4] = 'non-syn'; }
  elsif ($fields[4] == 2) { $fields[4] = 'nonsense'; }
  else { die "invalid coding class: '$fields[4]'\n"; }

  my $contigIndex = shift(@fields);
  my $location = shift(@fields);
  my $contigSourceId = $contigHash{$contigIndex};
  die "Can't map contigIndex '$contigIndex' in stdin" unless $contigSourceId;
  print STDOUT join("\t", "NGS_SNP.$contigSourceId.$location", @fields) . "\n"  unless ($seqFilter && ($contigSourceId ne $seqFilter || $location  < $minLoc || $location > $maxLoc));
}

sub usage {
  die "
Replace the first and second columns of a stream with a SNP ID, given a file with a mapping.

Usage: hsssReconstructSnpId contig_id_file [seq_id min_loc max_loc] < snp_search_result

Where:
  - contig_id_file: tab delimited, two columns, first column contig index (1,2,...); second column contig source_id
  - seq_source_id:  optional  sequence source id.  if present, return only SNPs on this sequence.
  - min_loc: required if seq_id provided.  return only SNPs at this location or larger
  - max_loc: required if seq_id provided.  return only SNPs at this location or smaller

  - snp_search_result: tab_delimited with columns contig_index, genomic_location, knowns_percent, non-major_allele_percent, product_class(-1=noncoding,0=syn,1=nonsyn,2=nonsense).

Replaces the first two columns of snp_search_result with a single column that is the concatenation of the contig_source_id-location, ie, a snp source id. 
Also converts protein_class to 'y' if class is nonsyn or nonsense.
";
}
